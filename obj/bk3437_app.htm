<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3437_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3437_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Tue Jun 24 15:08:15 2025
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[112]">enter_dut_fcc_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[112]">enter_dut_fcc_mode</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[2d]">app_batt_add_bas</a> from app_batt.o(i.app_batt_add_bas) referenced from app.o(.constdata)
 <LI><a href="#[2e]">app_batt_msg_dflt_handler</a> from app_batt.o(i.app_batt_msg_dflt_handler) referenced from app_batt.o(.constdata)
 <LI><a href="#[2a]">app_dis_add_dis</a> from app_dis.o(i.app_dis_add_dis) referenced from app.o(.constdata)
 <LI><a href="#[2b]">app_fee0_add_fee0s</a> from app_fee0.o(i.app_fee0_add_fee0s) referenced from app.o(.constdata)
 <LI><a href="#[33]">app_fee0_msg_dflt_handler</a> from app_fee0.o(i.app_fee0_msg_dflt_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[3d]">app_ffc1_ntf_cfg_ind_handler</a> from app_oads.o(i.app_ffc1_ntf_cfg_ind_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[3c]">app_ffc1_writer_req_handler</a> from app_oads.o(i.app_ffc1_writer_req_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[3e]">app_ffc2_ntf_cfg_ind_handler</a> from app_oads.o(i.app_ffc2_ntf_cfg_ind_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[40]">app_ffc2_writer_req_handler</a> from app_oads.o(i.app_ffc2_writer_req_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[5b]">app_get_host_name_req_handler</a> from app_task.o(i.app_get_host_name_req_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[5c]">app_msg_handler</a> from app_task.o(i.app_msg_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[5a]">app_mtu_change_req_handler</a> from app_task.o(i.app_mtu_change_req_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[2c]">app_oad_add_oads</a> from app_oads.o(i.app_oad_add_oads) referenced from app.o(.constdata)
 <LI><a href="#[3a]">app_oads_msg_dflt_handler</a> from app_oads.o(i.app_oads_msg_dflt_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[57]">app_period_timer_handler</a> from app_task.o(i.app_period_timer_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[42]">app_sec_msg_dflt_handler</a> from app_sec.o(i.app_sec_msg_dflt_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[58]">app_update_param_timer_handler</a> from app_task.o(i.app_update_param_timer_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[59]">app_update_phy_timer_handler</a> from app_task.o(i.app_update_phy_timer_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[30]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(i.bass_batt_level_ntf_cfg_ind_handler) referenced from app_batt.o(.constdata)
 <LI><a href="#[7d]">bass_batt_level_upd_req_handler</a> from bass.o(i.bass_batt_level_upd_req_handler) referenced from bass.o(.constdata)
 <LI><a href="#[7a]">bass_cb_att_read_get</a> from bass.o(i.bass_cb_att_read_get) referenced from bass.o(.constdata)
 <LI><a href="#[7b]">bass_cb_att_val_set</a> from bass.o(i.bass_cb_att_val_set) referenced from bass.o(.constdata)
 <LI><a href="#[77]">bass_cb_batt_level_upd_cmp</a> from bass.o(i.bass_cb_batt_level_upd_cmp) referenced from bass.o(.constdata)
 <LI><a href="#[78]">bass_cb_bond_data_upd</a> from bass.o(i.bass_cb_bond_data_upd) referenced from bass.o(.constdata)
 <LI><a href="#[79]">bass_cb_event_sent</a> from bass.o(i.bass_cb_event_sent) referenced from bass.o(.constdata)
 <LI><a href="#[81]">bass_con_cleanup</a> from bass.o(i.bass_con_cleanup) referenced from bass.o(.constdata)
 <LI><a href="#[80]">bass_con_create</a> from bass.o(i.bass_con_create) referenced from bass.o(.constdata)
 <LI><a href="#[7f]">bass_destroy</a> from bass.o(i.bass_destroy) referenced from bass.o(.constdata)
 <LI><a href="#[7c]">bass_enable_req_handler</a> from bass.o(i.bass_enable_req_handler) referenced from bass.o(.constdata)
 <LI><a href="#[2f]">bass_enable_rsp_handler</a> from app_batt.o(i.bass_enable_rsp_handler) referenced from app_batt.o(.constdata)
 <LI><a href="#[7e]">bass_init</a> from bass.o(i.bass_init) referenced from bass.o(.constdata)
 <LI><a href="#[5e]">bass_prf_itf_get</a> from bass.o(i.bass_prf_itf_get) referenced from prf.o(.constdata)
 <LI><a href="#[31]">batt_level_upd_handler</a> from app_batt.o(i.batt_level_upd_handler) referenced from app_batt.o(.constdata)
 <LI><a href="#[1d]">bk_printf</a> from bk_printf.o(i.bk_printf) referenced from main.o(i.rom_env_init)
 <LI><a href="#[9]">cpu_low_power_sleep</a> from icu.o(i.cpu_low_power_sleep) referenced from icu.o(i.cpu_low_power_sleep)
 <LI><a href="#[63]">diss_cb_att_info_get</a> from diss.o(i.diss_cb_att_info_get) referenced from diss.o(.constdata)
 <LI><a href="#[62]">diss_cb_att_read_get</a> from diss.o(i.diss_cb_att_read_get) referenced from diss.o(.constdata)
 <LI><a href="#[64]">diss_cb_att_val_set</a> from diss.o(i.diss_cb_att_val_set) referenced from diss.o(.constdata)
 <LI><a href="#[6a]">diss_con_cleanup</a> from diss.o(i.diss_con_cleanup) referenced from diss.o(.constdata)
 <LI><a href="#[69]">diss_con_create</a> from diss.o(i.diss_con_create) referenced from diss.o(.constdata)
 <LI><a href="#[68]">diss_destroy</a> from diss.o(i.diss_destroy) referenced from diss.o(.constdata)
 <LI><a href="#[67]">diss_init</a> from diss.o(i.diss_init) referenced from diss.o(.constdata)
 <LI><a href="#[5d]">diss_prf_itf_get</a> from diss.o(i.diss_prf_itf_get) referenced from prf.o(.constdata)
 <LI><a href="#[65]">diss_set_value_req_handler</a> from diss.o(i.diss_set_value_req_handler) referenced from diss.o(.constdata)
 <LI><a href="#[66]">diss_value_cfm_handler</a> from diss.o(i.diss_value_cfm_handler) referenced from diss.o(.constdata)
 <LI><a href="#[61]">diss_value_get_handler</a> from diss.o(i.diss_value_get_handler) referenced from diss.o(.constdata)
 <LI><a href="#[32]">diss_value_req_ind_handler</a> from app_dis.o(i.diss_value_req_ind_handler) referenced from app_dis.o(.constdata)
 <LI><a href="#[21]">fcc_hopping</a> from rf_xvr.o(i.fcc_hopping) referenced from main.o(i.rom_env_init)
 <LI><a href="#[71]">fee0s_cb_att_data_upd</a> from fee0s.o(i.fee0s_cb_att_data_upd) referenced from fee0s.o(.constdata)
 <LI><a href="#[6c]">fee0s_cb_att_read_get</a> from fee0s.o(i.fee0s_cb_att_read_get) referenced from fee0s.o(.constdata)
 <LI><a href="#[6d]">fee0s_cb_att_val_set</a> from fee0s.o(i.fee0s_cb_att_val_set) referenced from fee0s.o(.constdata)
 <LI><a href="#[72]">fee0s_cb_bond_data_upd</a> from fee0s.o(i.fee0s_cb_bond_data_upd) referenced from fee0s.o(.constdata)
 <LI><a href="#[6b]">fee0s_cb_event_sent</a> from fee0s.o(i.fee0s_cb_event_sent) referenced from fee0s.o(.constdata)
 <LI><a href="#[70]">fee0s_cb_value_upd_cmp</a> from fee0s.o(i.fee0s_cb_value_upd_cmp) referenced from fee0s.o(.constdata)
 <LI><a href="#[76]">fee0s_con_cleanup</a> from fee0s.o(i.fee0s_con_cleanup) referenced from fee0s.o(.constdata)
 <LI><a href="#[75]">fee0s_con_create</a> from fee0s.o(i.fee0s_con_create) referenced from fee0s.o(.constdata)
 <LI><a href="#[74]">fee0s_destroy</a> from fee0s.o(i.fee0s_destroy) referenced from fee0s.o(.constdata)
 <LI><a href="#[34]">fee0s_fee4_val_ntf_cfg_ind_handler</a> from app_fee0.o(i.fee0s_fee4_val_ntf_cfg_ind_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[6e]">fee0s_fee4_value_notification_upd_req_handler</a> from fee0s.o(i.fee0s_fee4_value_notification_upd_req_handler) referenced from fee0s.o(.constdata)
 <LI><a href="#[35]">fee0s_fee5_val_ind_cfg_ind_handler</a> from app_fee0.o(i.fee0s_fee5_val_ind_cfg_ind_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[6f]">fee0s_fee5_value_indication_upd_req_handler</a> from fee0s.o(i.fee0s_fee5_value_indication_upd_req_handler) referenced from fee0s.o(.constdata)
 <LI><a href="#[73]">fee0s_init</a> from fee0s.o(i.fee0s_init) referenced from fee0s.o(.constdata)
 <LI><a href="#[5f]">fee0s_prf_itf_get</a> from fee0s.o(i.fee0s_prf_itf_get) referenced from prf.o(.constdata)
 <LI><a href="#[38]">fee2_writer_cmd_handler</a> from app_fee0.o(i.fee2_writer_cmd_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[39]">fee3_writer_req_handler</a> from app_fee0.o(i.fee3_writer_req_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[36]">fee4_val_upd_rsp_handler</a> from app_fee0.o(i.fee4_val_upd_rsp_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[37]">fee5_val_upd_rsp_handler</a> from app_fee0.o(i.fee5_val_upd_rsp_handler) referenced from app_fee0.o(.constdata)
 <LI><a href="#[44]">gapc_bond_ind_handler</a> from app_sec.o(i.gapc_bond_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[43]">gapc_bond_req_ind_handler</a> from app_sec.o(i.gapc_bond_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[4c]">gapc_cmp_evt_handler</a> from app_task.o(i.gapc_cmp_evt_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[50]">gapc_con_rssi_ind_handler</a> from app_task.o(i.gapc_con_rssi_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[4d]">gapc_connection_req_ind_handler</a> from app_task.o(i.gapc_connection_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[4e]">gapc_disconnect_ind_handler</a> from app_task.o(i.gapc_disconnect_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[46]">gapc_encrypt_ind_handler</a> from app_sec.o(i.gapc_encrypt_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[45]">gapc_encrypt_req_ind_handler</a> from app_sec.o(i.gapc_encrypt_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[51]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(i.gapc_get_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[4f]">gapc_get_host_name_ind_handler</a> from app_task.o(i.gapc_get_host_name_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[56]">gapc_le_phy_ind_handler</a> from app_task.o(i.gapc_le_phy_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[55]">gapc_le_pkt_size_ind_handler</a> from app_task.o(i.gapc_le_pkt_size_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[53]">gapc_param_update_req_ind_handler</a> from app_task.o(i.gapc_param_update_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[54]">gapc_param_updated_ind_handler</a> from app_task.o(i.gapc_param_updated_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[52]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(i.gapc_set_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[49]">gapm_activity_created_ind_handler</a> from app_task.o(i.gapm_activity_created_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[4a]">gapm_activity_stopped_ind_handler</a> from app_task.o(i.gapm_activity_stopped_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[47]">gapm_cmp_evt_handler</a> from app_task.o(i.gapm_cmp_evt_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[48]">gapm_gen_rand_nb_ind_handler</a> from app_task.o(i.gapm_gen_rand_nb_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[4b]">gapm_profile_added_ind_handler</a> from app_task.o(i.gapm_profile_added_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[20]">gpio_toggle</a> from driver_gpio.o(i.gpio_toggle) referenced from main.o(i.rom_env_init)
 <LI><a href="#[1e]">kmod_fm_gain_set_1M</a> from rf_xvr.o(i.kmod_fm_gain_set_1M) referenced from main.o(i.rom_env_init)
 <LI><a href="#[1f]">kmod_fm_gain_set_2M</a> from rf_xvr.o(i.kmod_fm_gain_set_2M) referenced from main.o(i.rom_env_init)
 <LI><a href="#[8]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[24]">nvds_del</a> from nvds.o(i.nvds_del) referenced from rwip.o(i.rwip_init)
 <LI><a href="#[c]">nvds_erase</a> from nvds.o(i.nvds_erase) referenced from nvds.o(i.nvds_init)
 <LI><a href="#[22]">nvds_get</a> from nvds.o(i.nvds_get) referenced from rwip.o(i.rwip_init)
 <LI><a href="#[23]">nvds_put</a> from nvds.o(i.nvds_put) referenced from rwip.o(i.rwip_init)
 <LI><a href="#[a]">nvds_read</a> from nvds.o(i.nvds_read) referenced from nvds.o(i.nvds_init)
 <LI><a href="#[b]">nvds_write</a> from nvds.o(i.nvds_write) referenced from nvds.o(i.nvds_init)
 <LI><a href="#[88]">oads_cb_att_data_upd</a> from oads.o(i.oads_cb_att_data_upd) referenced from oads.o(.constdata)
 <LI><a href="#[83]">oads_cb_att_read_get</a> from oads.o(i.oads_cb_att_read_get) referenced from oads.o(.constdata)
 <LI><a href="#[84]">oads_cb_att_val_set</a> from oads.o(i.oads_cb_att_val_set) referenced from oads.o(.constdata)
 <LI><a href="#[89]">oads_cb_bond_data_upd</a> from oads.o(i.oads_cb_bond_data_upd) referenced from oads.o(.constdata)
 <LI><a href="#[82]">oads_cb_event_sent</a> from oads.o(i.oads_cb_event_sent) referenced from oads.o(.constdata)
 <LI><a href="#[87]">oads_cb_value_upd_cmp</a> from oads.o(i.oads_cb_value_upd_cmp) referenced from oads.o(.constdata)
 <LI><a href="#[8d]">oads_con_cleanup</a> from oads.o(i.oads_con_cleanup) referenced from oads.o(.constdata)
 <LI><a href="#[8c]">oads_con_create</a> from oads.o(i.oads_con_create) referenced from oads.o(.constdata)
 <LI><a href="#[8b]">oads_destroy</a> from oads.o(i.oads_destroy) referenced from oads.o(.constdata)
 <LI><a href="#[3b]">oads_enable_rsp_handler</a> from app_oads.o(i.oads_enable_rsp_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[85]">oads_ffc1_upd_req_handler</a> from oads.o(i.oads_ffc1_upd_req_handler) referenced from oads.o(.constdata)
 <LI><a href="#[3f]">oads_ffc1_upd_rsp_handler</a> from app_oads.o(i.oads_ffc1_upd_rsp_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[86]">oads_ffc2_upd_req_handler</a> from oads.o(i.oads_ffc2_upd_req_handler) referenced from oads.o(.constdata)
 <LI><a href="#[41]">oads_ffc2_upd_rsp_handler</a> from app_oads.o(i.oads_ffc2_upd_rsp_handler) referenced from app_oads.o(.constdata)
 <LI><a href="#[8a]">oads_init</a> from oads.o(i.oads_init) referenced from oads.o(.constdata)
 <LI><a href="#[60]">oads_prf_itf_get</a> from oads.o(i.oads_prf_itf_get) referenced from prf.o(.constdata)
 <LI><a href="#[1c]">platform_reset</a> from arch_main.o(i.platform_reset) referenced from main.o(i.rom_env_init)
 <LI><a href="#[1a]">prf_add_profile</a> from prf.o(i.prf_add_profile) referenced from main.o(i.rom_env_init)
 <LI><a href="#[19]">prf_con_cleanup</a> from prf.o(i.prf_con_cleanup) referenced from main.o(i.rom_env_init)
 <LI><a href="#[18]">prf_con_create</a> from prf.o(i.prf_con_create) referenced from main.o(i.rom_env_init)
 <LI><a href="#[16]">prf_con_param_upd</a> from prf.o(i.prf_con_param_upd) referenced from main.o(i.rom_env_init)
 <LI><a href="#[17]">prf_init</a> from prf.o(i.prf_init) referenced from main.o(i.rom_env_init)
 <LI><a href="#[15]">prf_msg_api_init</a> from prf.o(i.prf_msg_api_init) referenced from main.o(i.rom_env_init)
 <LI><a href="#[12]">rf_force_agc_enable</a> from rf_xvr.o(i.rf_force_agc_enable) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[11]">rf_reset</a> from rf_xvr.o(i.rf_reset) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[d]">rf_rpl_reg_rd</a> from rf_xvr.o(i.rf_rpl_reg_rd) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[e]">rf_rpl_reg_wr</a> from rf_xvr.o(i.rf_rpl_reg_wr) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[13]">rf_rssi_convert</a> from rf_xvr.o(i.rf_rssi_convert) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[10]">rf_sleep</a> from rf_xvr.o(i.rf_sleep) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[14]">rf_txpwr_cs_get</a> from rf_xvr.o(i.rf_txpwr_cs_get) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[f]">rf_txpwr_dbm_get</a> from rf_xvr.o(i.rf_txpwr_dbm_get) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[1b]">rwip_reset</a> from rwip.o(i.rwip_reset) referenced from main.o(i.rom_env_init)
 <LI><a href="#[8e]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[25]">uart0_send</a> from uart0_initial.o(i.uart0_send) referenced from uart.o(i.uart_init)
 <LI><a href="#[29]">uart_flow_off</a> from uart.o(i.uart_flow_off) referenced from main.o(.constdata)
 <LI><a href="#[28]">uart_flow_on</a> from uart.o(i.uart_flow_on) referenced from main.o(.constdata)
 <LI><a href="#[26]">uart_read</a> from uart.o(i.uart_read) referenced from main.o(.constdata)
 <LI><a href="#[27]">uart_write</a> from uart.o(i.uart_write) referenced from main.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1ab]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[1ac]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[1ad]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[1ae]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[1af]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[149]"></a>get_stack_FW_version</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[189]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[1a3]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[186]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[19f]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[1a1]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[1a0]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[187]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f2]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[eb]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_destroy
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[ae]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_value_upd_cmp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_bond_data_upd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_data_upd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_bond_data_upd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_batt_level_upd_cmp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_value_upd_cmp
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_bond_data_upd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_data_upd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd_req_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_get_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_phy_param
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_change_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_host_name_req_handler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
</UL>

<P><STRONG><a name="[c4]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_value_upd_cmp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_bond_data_upd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_data_upd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_bond_data_upd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_batt_level_upd_cmp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_value_upd_cmp
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_bond_data_upd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_data_upd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd_req_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd_req_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_get_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_phy_param
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_change_req_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_host_name_req_handler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
</UL>

<P><STRONG><a name="[d2]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[d3]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[131]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>

<P><STRONG><a name="[198]"></a>ke_timer_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[132]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[17e]"></a>ble_util_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[180]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[17f]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[181]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[18a]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[af]"></a>hci_send_2_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
</UL>

<P><STRONG><a name="[19d]"></a>sch_alarm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[19a]"></a>sch_arb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[19c]"></a>sch_plan_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[19b]"></a>sch_prog_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[195]"></a>sch_prog_fifo_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[19e]"></a>sch_slice_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[199]"></a>aes_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[18f]"></a>co_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e1]"></a>co_buf_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_read_get
</UL>

<P><STRONG><a name="[e4]"></a>co_buf_release</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_destroy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_read_get
</UL>

<P><STRONG><a name="[e5]"></a>co_buf_tail_reserve</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
</UL>

<P><STRONG><a name="[10e]"></a>co_buf_copy_data_from_mem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_read_get
</UL>

<P><STRONG><a name="[18d]"></a>co_djob_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[18e]"></a>co_time_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f3]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[f4]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
</UL>

<P><STRONG><a name="[ea]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_destroy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[111]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
</UL>

<P><STRONG><a name="[182]"></a>co_random_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[12f]"></a>co_rand_32bit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[1a2]"></a>rwip_slot_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[191]"></a>rwip_timer_alarm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[190]"></a>rwip_timer_arb_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[193]"></a>rwip_timer_co_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[197]"></a>rwip_crypt_isr_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[194]"></a>rwip_sw_int_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[1a4]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[196]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[158]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_w4_compl
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_expired
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[192]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[18c]"></a>rwip_driver_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[18b]"></a>rwble_hl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[ed]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable
</UL>

<P><STRONG><a name="[12e]"></a>gapc_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[134]"></a>gatt_mtu_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
</UL>

<P><STRONG><a name="[f0]"></a>gatt_db_svc16_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[172]"></a>gatt_db_svc_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[f1]"></a>gatt_db_att_info_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[ee]"></a>gatt_srv_event_mtp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
</UL>

<P><STRONG><a name="[e3]"></a>gatt_srv_att_read_get_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_read_get
</UL>

<P><STRONG><a name="[e7]"></a>gatt_srv_att_val_set_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_val_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_val_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_val_set
</UL>

<P><STRONG><a name="[10d]"></a>gatt_srv_att_info_get_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_info_get
</UL>

<P><STRONG><a name="[ef]"></a>gatt_user_srv_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[e9]"></a>gatt_user_unregister</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_destroy
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_2M
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_1M
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputi
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prepare_data
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_rssi_ind_handler
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_det
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_dev_name
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_build_adv_data
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_value_notification_upd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_value_notification_upd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_data_upd
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_data_upd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_otp_calibration
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_buffer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[12b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
</UL>

<P><STRONG><a name="[133]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_otp_calibration
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
</UL>

<P><STRONG><a name="[104]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_otp_data (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo (via BLX)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect (via BLX)
</UL>

<P><STRONG><a name="[105]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_otp_data (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo (via BLX)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect (via BLX)
</UL>

<P><STRONG><a name="[108]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_otp_data (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo (via BLX)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect (via BLX)
</UL>

<P><STRONG><a name="[109]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_otp_data (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo (via BLX)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect (via BLX)
</UL>

<P><STRONG><a name="[c2]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_end_value_duty_cycle_set (via BLX)
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via BLX)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data (via BLX)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[8f]"></a>vectors</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))

<P><STRONG><a name="[8e]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[91]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[93]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[90]"></a>__main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[95]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[97]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
</UL>

<P><STRONG><a name="[96]"></a>__scatterload</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload (via BLX)
</UL>

<P><STRONG><a name="[11c]"></a>Delay_ms</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, icu.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_2M
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_1M
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_triger
</UL>

<P><STRONG><a name="[106]"></a>Delay_myus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp.o(i.Delay_myus))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect
</UL>

<P><STRONG><a name="[fb]"></a>Delay_us</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, icu.o(i.Delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_low_power_sleep
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32K_esti
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
</UL>

<P><STRONG><a name="[92]"></a>FIQ_Exception</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, intc.o(i.FIQ_Exception))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[99]"></a>IF_filter_cali</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, rf_xvr.o(i.IF_filter_cali))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_triger
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[9b]"></a>INT_HANDLER_CLKEST</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, icu.o(i.INT_HANDLER_CLKEST))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[94]"></a>IRQ_Exception</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, intc.o(i.IRQ_Exception))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_isr
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_isr
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_isr
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISR
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_HANDLER_CLKEST
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[a2]"></a>TRAhcit_UART1_Rx</STRONG> (Thumb, 374 bytes, Stack size 0 bytes, uart1_initial.o(i.TRAhcit_UART1_Rx))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Tx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISR
</UL>

<P><STRONG><a name="[a7]"></a>TRAhcit_UART1_Tx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart1_initial.o(i.TRAhcit_UART1_Tx))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
</UL>

<P><STRONG><a name="[aa]"></a>TRAhcit_UART_Rx</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, uart0_initial.o(i.TRAhcit_UART_Rx))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_buffer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Tx
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
</UL>

<P><STRONG><a name="[ab]"></a>TRAhcit_UART_Tx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart0_initial.o(i.TRAhcit_UART_Tx))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
</UL>

<P><STRONG><a name="[9c]"></a>UART0_ISR</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, uart0_initial.o(i.UART0_ISR))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart_buffer
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[9d]"></a>UART1_ISR</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, uart1_initial.o(i.UART1_ISR))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[b1]"></a>__putchar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bk_printf.o(i.__putchar))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputchar
</UL>

<P><STRONG><a name="[b5]"></a>__vsprintf</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, bk_printf.o(i.__vsprintf))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__prints
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputi
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>

<P><STRONG><a name="[b6]"></a>adc_config</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, adc.o(i.adc_config))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_scfun_sel
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_adc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[137]"></a>adc_divided_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(i.adc_divided_disable))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_adc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[138]"></a>adc_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prepare_data
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[b9]"></a>adc_get_calibration</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, adc.o(i.adc_get_calibration))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_otp_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[135]"></a>adc_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adc.o(i.adc_init))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_adc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[9e]"></a>adc_isr</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, adc.o(i.adc_isr))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[139]"></a>adc_power_close</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(i.adc_power_close))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prepare_data
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[136]"></a>adc_power_open</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.adc_power_open))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_adc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>

<P><STRONG><a name="[bb]"></a>adc_proc</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, bsp.o(i.adc_proc))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_mode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sleep_mode
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bulk_voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[c1]"></a>analyse_ble_data</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bsp.o(i.analyse_ble_data))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_mode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sleep_mode
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee2_writer_cmd_handler
</UL>

<P><STRONG><a name="[c3]"></a>app_add_svc</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app.o(i.app_add_svc))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[2d]"></a>app_batt_add_bas</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_batt.o(i.app_batt_add_bas))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>app_batt_enable_prf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(i.app_batt_enable_prf))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[d5]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(i.app_batt_init))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
</UL>

<P><STRONG><a name="[c7]"></a>app_batt_send_lvl</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_batt.o(i.app_batt_send_lvl))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_ntf_cfg_ind_handler
</UL>

<P><STRONG><a name="[ca]"></a>app_create_advertising</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, app.o(i.app_create_advertising))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[2a]"></a>app_dis_add_dis</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_dis.o(i.app_dis_add_dis))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>app_disconnect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app.o(i.app_disconnect))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[2b]"></a>app_fee0_add_fee0s</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_fee0.o(i.app_fee0_add_fee0s))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>app_fee4_send_ntf</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_fee0.o(i.app_fee4_send_ntf))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>

<P><STRONG><a name="[cd]"></a>app_ffc1_ntf_req</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc1_ntf_req))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
</UL>

<P><STRONG><a name="[ce]"></a>app_ffc2_ntf_req</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc2_ntf_req))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
</UL>

<P><STRONG><a name="[cf]"></a>app_get_dev_name</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app.o(i.app_get_dev_name))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[d0]"></a>app_init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app.o(i.app_init))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[2c]"></a>app_oad_add_oads</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_oads.o(i.app_oad_add_oads))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>app_oads_enable_prf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_oads.o(i.app_oads_enable_prf))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[d4]"></a>app_sec_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_sec.o(i.app_sec_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
</UL>

<P><STRONG><a name="[d8]"></a>app_sec_send_security_req</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_sec.o(i.app_sec_send_security_req))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[d9]"></a>app_set_adv_data</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app.o(i.app_set_adv_data))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_build_adv_data
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[da]"></a>app_set_scan_rsp_data</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app.o(i.app_set_scan_rsp_data))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[db]"></a>app_start_advertising</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app.o(i.app_start_advertising))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[dc]"></a>app_update_param</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(i.app_update_param))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param_timer_handler
</UL>

<P><STRONG><a name="[dd]"></a>appm_update_phy_param</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_task.o(i.appm_update_phy_param))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_phy_timer_handler
</UL>

<P><STRONG><a name="[de]"></a>bass_batt_level_upd</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bass.o(i.bass_batt_level_upd))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
</UL>

<P><STRONG><a name="[77]"></a>bass_cb_batt_level_upd_cmp</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bass.o(i.bass_cb_batt_level_upd_cmp))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>bass_cb_bond_data_upd</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bass.o(i.bass_cb_bond_data_upd))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>bass_enable</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, bass.o(i.bass_enable))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[5e]"></a>bass_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bass.o(i.bass_prf_itf_get))
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[1d]"></a>bk_printf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bk_printf.o(i.bk_printf))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_svc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_calibration
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_value_upd_cmp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_bond_data_upd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_con_create
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_con_create
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_mode_init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_end_value_duty_cycle_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_cap_mode_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_output_mode_config
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_output_mode_config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_otp_calibration
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32K_esti
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_2M
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_1M
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IF_filter_cali
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reset
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_isr
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_isr
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_HANDLER_CLKEST
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_prf_itf_get
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32k_estti_check
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_w4_compl
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_start
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_phy_param
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_phy_ind_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_host_name_ind_handler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_rssi_ind_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_phy_timer_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param_timer_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_change_req_handler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_rsp_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_rsp_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_msg_dflt_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_cfg_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_cfg_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee5_val_upd_rsp_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee4_val_upd_rsp_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee3_writer_req_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee2_writer_cmd_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_ind_cfg_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_ntf_cfg_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_msg_dflt_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_level_upd_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_ntf_cfg_ind_handler
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_proc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_det
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_proc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_print
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_det_proc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[d1]"></a>ble_name_addr_env_init</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, main.o(i.ble_name_addr_env_init))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f7]"></a>charge_det_proc</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bsp.o(i.charge_det_proc))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[a8]"></a>clear_uart1_buffer</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, uart1_initial.o(i.clear_uart1_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Tx
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISR
</UL>

<P><STRONG><a name="[ac]"></a>clear_uart_buffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart0_initial.o(i.clear_uart_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Tx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
</UL>

<P><STRONG><a name="[f9]"></a>clk32K_esti</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, icu.o(i.clk32K_esti))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32k_estti_check
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[fa]"></a>clk32k_estti_check</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, icu.o(i.clk32k_estti_check))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_esti_initial
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calib_manu
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32K_esti
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_start
</UL>

<P><STRONG><a name="[fc]"></a>clk_esti_initial</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, icu.o(i.clk_esti_initial))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32k_estti_check
</UL>

<P><STRONG><a name="[126]"></a>clr_flash_qwfr</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, driver_flash.o(i.clr_flash_qwfr))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[fe]"></a>cpu_idle_sleep</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, icu.o(i.cpu_idle_sleep))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WFI (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>cpu_low_power_sleep</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, icu.o(i.cpu_low_power_sleep))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> icu.o(i.cpu_low_power_sleep)
</UL>
<P><STRONG><a name="[a6]"></a>cpu_reset</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, icu.o(i.cpu_reset))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Rx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Rx
</UL>

<P><STRONG><a name="[101]"></a>cpu_wakeup</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, icu.o(i.cpu_wakeup))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_low_power_sleep
</UL>

<P><STRONG><a name="[102]"></a>current_detect</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bsp.o(i.current_detect))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_adc
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prepare_data
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_myus
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[10a]"></a>debug_info_print</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, bsp.o(i.debug_info_print))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[10b]"></a>deep_sleep</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, icu.o(i.deep_sleep))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>deep_sleep_wakeup_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, icu.o(i.deep_sleep_wakeup_set))
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
</UL>

<P><STRONG><a name="[5d]"></a>diss_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, diss.o(i.diss_prf_itf_get))
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>diss_value_cfm</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, diss.o(i.diss_value_cfm))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_read_get_cfm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_copy_data_from_mem
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
</UL>

<P><STRONG><a name="[61]"></a>diss_value_get_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, diss.o(i.diss_value_get_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>diss_value_set</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, diss.o(i.diss_value_set))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[112]"></a>enter_dut_fcc_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.enter_dut_fcc_mode))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13e]"></a>exchange_memery_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, icu.o(i.exchange_memery_init))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
</UL>

<P><STRONG><a name="[21]"></a>fcc_hopping</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rf_xvr.o(i.fcc_hopping))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[71]"></a>fee0s_cb_att_data_upd</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_att_data_upd))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>fee0s_cb_bond_data_upd</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_bond_data_upd))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>fee0s_cb_value_upd_cmp</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_value_upd_cmp))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>fee0s_fee4_value_notification_upd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee4_value_notification_upd))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd_req_handler
</UL>

<P><STRONG><a name="[11b]"></a>fee0s_fee5_value_indication_upd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee5_value_indication_upd))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd_req_handler
</UL>

<P><STRONG><a name="[118]"></a>fee0s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_get_att_handle))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
</UL>

<P><STRONG><a name="[115]"></a>fee0s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_get_att_idx))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_val_set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
</UL>

<P><STRONG><a name="[5f]"></a>fee0s_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_prf_itf_get))
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>filter_triger</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rf_xvr.o(i.filter_triger))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IF_filter_cali
</UL>

<P><STRONG><a name="[11d]"></a>flash_erase</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, driver_flash.o(i.flash_erase))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_erase
</UL>

<P><STRONG><a name="[11f]"></a>flash_erase_sector</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, driver_flash.o(i.flash_erase_sector))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_128k
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[122]"></a>flash_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, driver_flash.o(i.flash_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>flash_read</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, driver_flash.o(i.flash_read))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
</UL>

<P><STRONG><a name="[124]"></a>flash_read_data</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, driver_flash.o(i.flash_read_data))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
</UL>

<P><STRONG><a name="[125]"></a>flash_read_otp_data</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, driver_flash.o(i.flash_read_otp_data))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_otp_calibration
</UL>

<P><STRONG><a name="[127]"></a>flash_read_sr</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_flash.o(i.flash_read_sr))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_128k
</UL>

<P><STRONG><a name="[123]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_flash.o(i.flash_set_dual_mode))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[120]"></a>flash_wp_128k</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, driver_flash.o(i.flash_wp_128k))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[121]"></a>flash_wp_ALL</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, driver_flash.o(i.flash_wp_ALL))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[129]"></a>flash_write</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, driver_flash.o(i.flash_write))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_write
</UL>

<P><STRONG><a name="[12a]"></a>flash_write_data</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, driver_flash.o(i.flash_write_data))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_128k
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[128]"></a>flash_write_sr</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, driver_flash.o(i.flash_write_sr))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr_temp
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_128k
</UL>

<P><STRONG><a name="[12c]"></a>flash_write_sr_temp</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, driver_flash.o(i.flash_write_sr_temp))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>

<P><STRONG><a name="[bc]"></a>get_bulk_voltage</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, bsp.o(i.get_bulk_voltage))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_chnl_data
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>

<P><STRONG><a name="[11e]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_flash.o(i.get_flash_ID))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr_temp
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[ba]"></a>get_flash_otp_calibration</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, driver_flash.o(i.get_flash_otp_calibration))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_otp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_calibration
</UL>

<P><STRONG><a name="[bd]"></a>get_gpio_chnl_data</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, adc.o(i.get_gpio_chnl_data))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_power_open
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_power_close
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_divided_disable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bulk_voltage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>

<P><STRONG><a name="[107]"></a>get_prepare_data</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, adc.o(i.get_prepare_data))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_power_close
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect
</UL>

<P><STRONG><a name="[be]"></a>get_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(i.get_sleep_mode))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>

<P><STRONG><a name="[ad]"></a>get_sys_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.get_sys_mode))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISR
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
</UL>

<P><STRONG><a name="[1a6]"></a>get_targetr</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, bsp.o(i.get_targetr))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_det
</UL>

<P><STRONG><a name="[b7]"></a>gpio_config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_config))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bulk_voltage
</UL>

<P><STRONG><a name="[f8]"></a>gpio_get_input</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_get_input))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_proc
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_det_proc
</UL>

<P><STRONG><a name="[14c]"></a>gpio_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_init))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>gpio_isr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_isr))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[b8]"></a>gpio_scfun_sel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_scfun_sel))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>

<P><STRONG><a name="[13a]"></a>gpio_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_set))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bulk_voltage
</UL>

<P><STRONG><a name="[20]"></a>gpio_toggle</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, driver_gpio.o(i.gpio_toggle))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[13b]"></a>hci_data_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(i.hci_data_init))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_get_event
</UL>

<P><STRONG><a name="[13c]"></a>host_get_event</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(i.host_get_event))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_h4tl_data_switch
</UL>

<P><STRONG><a name="[13d]"></a>icu_init</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, icu.o(i.icu_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exchange_memery_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13f]"></a>init_bsp</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, bsp.o(i.init_bsp))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a8]"></a>init_target</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp.o(i.init_target))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_proc
</UL>

<P><STRONG><a name="[150]"></a>intc_init</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, intc.o(i.intc_init))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>key_proc</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, bsp.o(i.key_proc))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[144]"></a>kmod_calibration_1M</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, rf_xvr.o(i.kmod_calibration_1M))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[145]"></a>kmod_calibration_2M</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, rf_xvr.o(i.kmod_calibration_2M))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[1e]"></a>kmod_fm_gain_set_1M</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(i.kmod_fm_gain_set_1M))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[1f]"></a>kmod_fm_gain_set_2M</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(i.kmod_fm_gain_set_2M))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[146]"></a>led_proc</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, bsp.o(i.led_proc))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[8]"></a>main</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt1_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_power
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_FW_version
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sleep_mode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_low_power_sleep
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_calibration
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_name_addr_env_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stack_integrity_check
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[155]"></a>main_loop</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, bsp.o(i.main_loop))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_mode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sleep_mode
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_proc
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_delay_proc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_det
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smart_led_proc
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bulk_voltage
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_proc
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_proc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_print
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_det_proc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14b]"></a>mcu_clk_switch</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, icu.o(i.mcu_clk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[24]"></a>nvds_del</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(i.nvds_del))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(i.rwip_init)
</UL>
<P><STRONG><a name="[22]"></a>nvds_get</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, nvds.o(i.nvds_get))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(i.rwip_init)
</UL>
<P><STRONG><a name="[14e]"></a>nvds_init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, nvds.o(i.nvds_init))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>nvds_put</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, nvds.o(i.nvds_put))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip.o(i.rwip_init)
</UL>
<P><STRONG><a name="[166]"></a>oadImgBlockWrite</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, oads_common.o(i.oadImgBlockWrite))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_end
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
</UL>

<P><STRONG><a name="[16c]"></a>oadImgIdentifyWrite</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, oads_common.o(i.oadImgIdentifyWrite))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_mode
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
</UL>

<P><STRONG><a name="[168]"></a>oad_save_reciveData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads_common.o(i.oad_save_reciveData))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[167]"></a>oad_updating_user_section_begin</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, oads_common.o(i.oad_updating_user_section_begin))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[169]"></a>oad_updating_user_section_end</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads_common.o(i.oad_updating_user_section_end))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[154]"></a>oad_updating_user_section_pro</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, oads_common.o(i.oad_updating_user_section_pro))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>oads_cb_att_data_upd</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, oads.o(i.oads_cb_att_data_upd))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>oads_cb_bond_data_upd</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, oads.o(i.oads_cb_bond_data_upd))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>oads_cb_value_upd_cmp</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, oads.o(i.oads_cb_value_upd_cmp))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>oads_ffc1_value_notification_upd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, oads.o(i.oads_ffc1_value_notification_upd))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
</UL>

<P><STRONG><a name="[165]"></a>oads_ffc2_value_notification_upd</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, oads.o(i.oads_ffc2_value_notification_upd))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
</UL>

<P><STRONG><a name="[170]"></a>oads_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oads.o(i.oads_get_att_handle))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
</UL>

<P><STRONG><a name="[16d]"></a>oads_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads.o(i.oads_get_att_idx))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
</UL>

<P><STRONG><a name="[60]"></a>oads_prf_itf_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads.o(i.oads_prf_itf_get))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[1c]"></a>platform_reset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, arch_main.o(i.platform_reset))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[103]"></a>prepare_adc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, adc.o(i.prepare_adc))
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_power_open
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_divided_disable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_detect
</UL>

<P><STRONG><a name="[1a]"></a>prf_add_profile</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, prf.o(i.prf_add_profile))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[19]"></a>prf_con_cleanup</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, prf.o(i.prf_con_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[18]"></a>prf_con_create</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, prf.o(i.prf_con_create))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[16]"></a>prf_con_param_upd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, prf.o(i.prf_con_param_upd))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[c8]"></a>prf_dst_task_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, prf.o(i.prf_dst_task_get))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_value_upd_cmp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_bond_data_upd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_data_upd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_bond_data_upd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_batt_level_upd_cmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_value_upd_cmp
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_bond_data_upd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_data_upd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_get_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
</UL>

<P><STRONG><a name="[df]"></a>prf_env_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, prf.o(i.prf_env_get))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_idx
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_handle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_value_notification_upd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_value_notification_upd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_event_sent
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_val_set
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_read_get
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_bond_data_upd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_event_sent
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_val_set
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_event_sent
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_val_set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_read_get
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_cb_att_read_get
</UL>

<P><STRONG><a name="[17]"></a>prf_init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, prf.o(i.prf_init))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[15]"></a>prf_msg_api_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, prf.o(i.prf_msg_api_init))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[e6]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, prf_utils.o(i.prf_pack_char_pres_fmt))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_tail_reserve
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
</UL>

<P><STRONG><a name="[c6]"></a>prf_src_task_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, prf.o(i.prf_src_task_get))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_value_upd_cmp
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_bond_data_upd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_att_data_upd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_bond_data_upd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_batt_level_upd_cmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_value_upd_cmp
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_bond_data_upd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_att_data_upd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_get_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
</UL>

<P><STRONG><a name="[140]"></a>pwm0_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, pwm.o(i.pwm0_init))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
</UL>

<P><STRONG><a name="[a0]"></a>pwm0_isr</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, pwm.o(i.pwm0_isr))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[141]"></a>pwm1_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pwm.o(i.pwm1_init))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
</UL>

<P><STRONG><a name="[a1]"></a>pwm1_isr</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, pwm.o(i.pwm1_isr))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[176]"></a>pwm1_output_mode_config</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, pwm.o(i.pwm1_output_mode_config))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_mode_init
</UL>

<P><STRONG><a name="[177]"></a>pwm_cap_mode_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pwm.o(i.pwm_cap_mode_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_cap_mode_config
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_cap_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
</UL>

<P><STRONG><a name="[17a]"></a>pwm_end_value_duty_cycle_set</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, pwm.o(i.pwm_end_value_duty_cycle_set))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bulk_voltage
</UL>

<P><STRONG><a name="[17b]"></a>pwm_output_mode_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pwm.o(i.pwm_output_mode_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_output_mode_config
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_output_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
</UL>

<P><STRONG><a name="[fd]"></a>rc32k_calib_manu</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, rf_xvr.o(i.rc32k_calib_manu))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32k_estti_check
</UL>

<P><STRONG><a name="[1aa]"></a>rc32k_calib_soft</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_xvr.o(i.rc32k_calib_soft))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[17c]"></a>rf_init</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_init))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_power
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[17d]"></a>rwble_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, rwble.o(i.rwble_init))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_random_init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[183]"></a>rwip_cali_rc32k_expired</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, rwip.o(i.rwip_cali_rc32k_expired))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[184]"></a>rwip_cali_rc32k_start</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip.o(i.rwip_cali_rc32k_start))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32k_estti_check
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[185]"></a>rwip_cali_rc32k_w4_compl</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rwip.o(i.rwip_cali_rc32k_w4_compl))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[188]"></a>rwip_eif_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.rwip_eif_get))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[152]"></a>rwip_init</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, rwip.o(i.rwip_init))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_time_init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_djob_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_mode
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>rwip_isr</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, rwip.o(i.rwip_isr))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_handler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_co_handler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_arb_handler
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_alarm_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_fifo_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[1b]"></a>rwip_reset</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, rwip.o(i.rwip_reset))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_time_init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_djob_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_flush
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[113]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(i.rwip_schedule))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[156]"></a>rwip_sleep</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, rwip.o(i.rwip_sleep))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_co_handler
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sleep_mode
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_w4_compl
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_start
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_cali_rc32k_expired
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>send_data_proc</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, bsp.o(i.send_data_proc))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_proc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_det
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_proc
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_proc
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_det_proc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>

<P><STRONG><a name="[15c]"></a>set_bulk_voltage</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, bsp.o(i.set_bulk_voltage))
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_end_value_duty_cycle_set
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[100]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, driver_flash.o(i.set_flash_clk))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_low_power_sleep
</UL>

<P><STRONG><a name="[15e]"></a>set_led</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, bsp.o(i.set_led))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[153]"></a>set_power</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rf_xvr.o(i.set_power))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[c0]"></a>set_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(i.set_sleep_mode))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_proc
</UL>

<P><STRONG><a name="[15d]"></a>smart_led_proc</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, bsp.o(i.smart_led_proc))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[142]"></a>start_anmo</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, bsp.o(i.start_anmo))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pwm
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_bsp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_proc
</UL>

<P><STRONG><a name="[1a5]"></a>start_pwm</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, pwm.o(i.start_pwm))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_mode_init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_cap_mode_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_scfun_sel
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bulk_voltage
</UL>

<P><STRONG><a name="[159]"></a>target_det</STRONG> (Thumb, 444 bytes, Stack size 0 bytes, bsp.o(i.target_det))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_targetr
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[14d]"></a>uart0_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, uart0_initial.o(i.uart0_init))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>uart0_send</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart0_initial.o(i.uart0_send))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART_Tx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.uart_init)
</UL>
<P><STRONG><a name="[1a7]"></a>uart0_send_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart0_initial.o(i.uart0_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>

<P><STRONG><a name="[a9]"></a>uart1_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart1_initial.o(i.uart1_send))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAhcit_UART1_Tx
</UL>

<P><STRONG><a name="[173]"></a>uart_finish_transfers</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.uart_finish_transfers))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[29]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.uart_flow_off))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.uart_flow_on))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>uart_h4tl_data_switch</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, uart.o(i.uart_h4tl_data_switch))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_get_event
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_dut_fcc_mode
</UL>

<P><STRONG><a name="[151]"></a>uart_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart.o(i.uart_init))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_data_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>uart_read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(i.uart_read))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>uart_write</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(i.uart_write))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>user_delay_proc</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, bsp.o(i.user_delay_proc))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[148]"></a>wdt1_disable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wdt.o(i.wdt1_disable))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[147]"></a>wdt_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(i.wdt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>wdt_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wdt.o(i.wdt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>

<P><STRONG><a name="[15a]"></a>wdt_feed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdt.o(i.wdt_feed))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[15b]"></a>work_proc</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bsp.o(i.work_proc))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_anmo
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_proc
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_target
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[1a9]"></a>xtal_set_cal</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rf_xvr.o(i.xtal_set_cal))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[14a]"></a>xvr_reg_initial</STRONG> (Thumb, 458 bytes, Stack size 0 bytes, rf_xvr.o(i.xvr_reg_initial))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk32K_esti
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_set_cal
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calib_soft
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_2M
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration_1M
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IF_filter_cali
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[14f]"></a>rom_env_init</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, main.o(i.rom_env_init))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>stack_integrity_check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.stack_integrity_check))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c9]"></a>app_build_adv_data</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, app.o(i.app_build_adv_data))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
</UL>

<P><STRONG><a name="[2e]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(i.app_batt_msg_dflt_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_batt.o(i.bass_batt_level_ntf_cfg_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(i.bass_enable_rsp_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>batt_level_upd_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_batt.o(i.batt_level_upd_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, app_dis.o(i.diss_value_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>app_fee0_msg_dflt_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_fee0.o(i.app_fee0_msg_dflt_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>fee0s_fee4_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_fee0.o(i.fee0s_fee4_val_ntf_cfg_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>fee0s_fee5_val_ind_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_fee0.o(i.fee0s_fee5_val_ind_cfg_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>fee2_writer_cmd_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_fee0.o(i.fee2_writer_cmd_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_ble_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>fee3_writer_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_fee0.o(i.fee3_writer_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>fee4_val_upd_rsp_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_fee0.o(i.fee4_val_upd_rsp_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>fee5_val_upd_rsp_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_fee0.o(i.fee5_val_upd_rsp_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>app_ffc1_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc1_ntf_cfg_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>app_ffc1_writer_req_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc1_writer_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>app_ffc2_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc2_ntf_cfg_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>app_ffc2_writer_req_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(i.app_ffc2_writer_req_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>app_oads_msg_dflt_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_oads.o(i.app_oads_msg_dflt_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>oads_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(i.oads_enable_rsp_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>oads_ffc1_upd_rsp_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_oads.o(i.oads_ffc1_upd_rsp_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>oads_ffc2_upd_rsp_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_oads.o(i.oads_ffc2_upd_rsp_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sec.o(i.app_sec_msg_dflt_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, app_sec.o(i.gapc_bond_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, app_sec.o(i.gapc_bond_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_rand_32bit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_sec.o(i.gapc_encrypt_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, app_sec.o(i.gapc_encrypt_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>app_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(i.app_get_handler))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_handler
</UL>

<P><STRONG><a name="[5b]"></a>app_get_host_name_req_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_task.o(i.app_get_host_name_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>app_msg_handler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_task.o(i.app_msg_handler))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>app_mtu_change_req_handler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_task.o(i.app_mtu_change_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>app_period_timer_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(i.app_period_timer_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>app_update_param_timer_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(i.app_update_param_timer_handler))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_param
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>app_update_phy_timer_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_task.o(i.app_update_phy_timer_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_phy_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_task.o(i.gapc_cmp_evt_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>gapc_con_rssi_ind_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_task.o(i.gapc_con_rssi_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, app_task.o(i.gapc_connection_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_task.o(i.gapc_disconnect_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, app_task.o(i.gapc_get_dev_info_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_dev_name
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>gapc_get_host_name_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(i.gapc_get_host_name_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>gapc_le_phy_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(i.gapc_le_phy_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_task.o(i.gapc_le_pkt_size_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_get
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_task.o(i.gapc_param_update_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_task.o(i.gapc_param_updated_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_task.o(i.gapc_set_dev_info_req_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(i.gapm_activity_created_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(i.gapm_activity_stopped_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 390 bytes, Stack size 0 bytes, app_task.o(i.gapm_cmp_evt_handler))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_advertising
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_scan_rsp_data
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_adv_data
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_create_advertising
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_svc
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_task.o(i.gapm_gen_rand_nb_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_task.o(i.gapm_profile_added_ind_handler))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>nvds_browse_tag</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(i.nvds_browse_tag))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>

<P><STRONG><a name="[c]"></a>nvds_erase</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nvds.o(i.nvds_erase))
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(i.nvds_init)
</UL>
<P><STRONG><a name="[162]"></a>nvds_init_memory</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nvds.o(i.nvds_init_memory))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
</UL>

<P><STRONG><a name="[163]"></a>nvds_purge</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, nvds.o(i.nvds_purge))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[a]"></a>nvds_read</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nvds.o(i.nvds_read))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(i.nvds_init)
</UL>
<P><STRONG><a name="[161]"></a>nvds_walk_tag</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, nvds.o(i.nvds_walk_tag))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[b]"></a>nvds_write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nvds.o(i.nvds_write))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(i.nvds_init)
</UL>
<P><STRONG><a name="[12]"></a>rf_force_agc_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_force_agc_enable))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[11]"></a>rf_reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_reset))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[d]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rpl_reg_rd))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[e]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rpl_reg_wr))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[13]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rssi_convert))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[10]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_sleep))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[14]"></a>rf_txpwr_cs_get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_txpwr_cs_get))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[f]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_txpwr_dbm_get))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[ff]"></a>WFI</STRONG> (ARM, 12 bytes, Stack size 0 bytes, icu.o(i.WFI))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep (via BLX)
</UL>

<P><STRONG><a name="[178]"></a>pwm0_cap_mode_config</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, pwm.o(i.pwm0_cap_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_cap_mode_init
</UL>

<P><STRONG><a name="[175]"></a>pwm0_output_mode_config</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, pwm.o(i.pwm0_output_mode_config))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_mode_init
</UL>

<P><STRONG><a name="[179]"></a>pwm1_cap_mode_config</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, pwm.o(i.pwm1_cap_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_cap_mode_init
</UL>

<P><STRONG><a name="[63]"></a>diss_cb_att_info_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, diss.o(i.diss_cb_att_info_get))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_info_get_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>diss_cb_att_read_get</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, diss.o(i.diss_cb_att_read_get))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_read_get_cfm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_copy_data_from_mem
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>diss_cb_att_val_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, diss.o(i.diss_cb_att_val_set))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_val_set_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>diss_con_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(i.diss_con_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>diss_con_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(i.diss_con_create))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>diss_destroy</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(i.diss_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>diss_init</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, diss.o(i.diss_init))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_srv_register
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_db_svc16_add
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>diss_set_value_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, diss.o(i.diss_set_value_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>diss_value_cfm_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, diss.o(i.diss_value_cfm_handler))
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>fee0s_cb_att_read_get</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_att_read_get))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_read_get_cfm
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>fee0s_cb_att_val_set</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_att_val_set))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_val_set_cfm
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>fee0s_cb_event_sent</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_cb_event_sent))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>fee0s_con_cleanup</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_con_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>fee0s_con_create</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_con_create))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>fee0s_destroy</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>fee0s_exe_operation</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_exe_operation))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_event_mtp_send
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_indication_value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_notification_value
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_cb_event_sent
</UL>

<P><STRONG><a name="[117]"></a>fee0s_fee4_notification_value</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee4_notification_value))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd
</UL>

<P><STRONG><a name="[6e]"></a>fee0s_fee4_value_notification_upd_req_handler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee4_value_notification_upd_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_value_notification_upd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>fee0s_fee5_indication_value</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee5_indication_value))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_exe_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd
</UL>

<P><STRONG><a name="[6f]"></a>fee0s_fee5_value_indication_upd_req_handler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_fee5_value_indication_upd_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_value_indication_upd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>fee0s_init</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, fee0s.o(i.fee0s_init))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_srv_register
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_db_svc16_add
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bass.o(i.bass_batt_level_upd_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>bass_cb_att_read_get</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, bass.o(i.bass_cb_att_read_get))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_read_get_cfm
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_tail_reserve
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>bass_cb_att_val_set</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, bass.o(i.bass_cb_att_val_set))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_val_set_cfm
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>bass_cb_event_sent</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bass.o(i.bass_cb_event_sent))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>bass_con_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(i.bass_con_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>bass_con_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(i.bass_con_create))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>bass_destroy</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bass.o(i.bass_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>bass_enable_req_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bass.o(i.bass_enable_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>bass_exe_operation</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, bass.o(i.bass_exe_operation))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_event_mtp_send
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_event_sent
</UL>

<P><STRONG><a name="[e2]"></a>bass_get_att_idx</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, bass.o(i.bass_get_att_idx))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_val_set
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cb_att_read_get
</UL>

<P><STRONG><a name="[7e]"></a>bass_init</STRONG> (Thumb, 354 bytes, Stack size 0 bytes, bass.o(i.bass_init))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_srv_register
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_db_att_info_set
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_db_svc16_add
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, bass.o(i.bass_notify_batt_lvl))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd
</UL>

<P><STRONG><a name="[83]"></a>oads_cb_att_read_get</STRONG> (Thumb, 348 bytes, Stack size 0 bytes, oads.o(i.oads_cb_att_read_get))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_read_get_cfm
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>oads_cb_att_val_set</STRONG> (Thumb, 374 bytes, Stack size 0 bytes, oads.o(i.oads_cb_att_val_set))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_att_val_set_cfm
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_idx
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>oads_cb_event_sent</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, oads.o(i.oads_cb_event_sent))
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>oads_con_cleanup</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads.o(i.oads_con_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>oads_con_create</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, oads.o(i.oads_con_create))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>oads_destroy</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, oads.o(i.oads_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>oads_exe_operation</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, oads.o(i.oads_exe_operation))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_srv_event_mtp_send
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_release
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_notification_value
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_notification_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_cb_event_sent
</UL>

<P><STRONG><a name="[16f]"></a>oads_ffc1_notification_value</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, oads.o(i.oads_ffc1_notification_value))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_handle
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_value_notification_upd
</UL>

<P><STRONG><a name="[85]"></a>oads_ffc1_upd_req_handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, oads.o(i.oads_ffc1_upd_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_value_notification_upd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>oads_ffc2_notification_value</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, oads.o(i.oads_ffc2_notification_value))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_alloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_get_att_handle
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_exe_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_value_notification_upd
</UL>

<P><STRONG><a name="[86]"></a>oads_ffc2_upd_req_handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, oads.o(i.oads_ffc2_upd_req_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_value_notification_upd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>oads_init</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, oads.o(i.oads_init))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_unregister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_user_srv_register
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_db_svc_add
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>oadImgBlockReq</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, oads_common.o(i.oadImgBlockReq))
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_value_notification_upd
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[16a]"></a>oadImgIdentifyReq</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, oads_common.o(i.oadImgIdentifyReq))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bk_printf
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_value_notification_upd
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[b0]"></a>__outputchar</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bk_printf.o(i.__outputchar))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vsprintf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__prints
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputi
</UL>

<P><STRONG><a name="[b2]"></a>__outputi</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, bk_printf.o(i.__outputi))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__prints
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vsprintf
</UL>

<P><STRONG><a name="[b3]"></a>__prints</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bk_printf.o(i.__prints))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vsprintf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__outputi
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
